{"ast":null,"code":"import React from \"react\";\n\nvar ChangeProject = function ChangeProject(e) {\n  var policyManual;\n  var selectedPolicyCNFT;\n\n  if (e.length > 1) {\n    policyManual = e;\n    selectedPolicyCNFT = null;\n  } else {\n    selectedPolicyCNFT = e.target.value;\n    policyManual = null;\n  }\n\n  function sortPolicy() {\n    if (policyManual !== null) {\n      return policyManual;\n    } else {\n      return selectedPolicyCNFT;\n    }\n  }\n\n  console.log(selectedPolicyCNFT);\n  console.log(e);\n  var config = {\n    headers: {\n      Accept: \"application/json\"\n    }\n  };\n  var params = {\n    policy: sortPolicy()\n  };\n  axios.get(\"https://api.opencnft.io/1/policy/\".concat(params.policy), config).then(function (res) {\n    var volumeStr = \"\".concat((res.data.total_volume /= Math.pow(10, 6)).toLocaleString(), \" ADA\");\n    var floorNum = res.data.floor_price /= Math.pow(10, 6);\n    var floorStr = \"\".concat(floorNum, \" ADA\");\n    var assets = res.data.asset_minted;\n    var cap = \"\".concat((assets * floorNum).toLocaleString(), \" ADA\");\n    var editImg = res.data.thumbnail.slice(-46);\n    var holders = res.data.asset_holders;\n    console.log(editImg);\n    var nftsPerWallet = (res.data.asset_minted /= res.data.asset_holders).toFixed(2);\n    var pic = \"https://ipfs.io/ipfs/\".concat(editImg);\n    setImgCNFT(pic);\n    setFloor(floorStr);\n    setVolCNFT(volumeStr);\n    setMktCapCNFT(cap);\n    setAssetsMinted(assets);\n    setAssetHolders(holders);\n    setAssetsWallet(nftsPerWallet);\n    console.log(res.data.thumbnail);\n    console.log(cap);\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nexport default ChangeProject;","map":{"version":3,"names":["React","ChangeProject","e","policyManual","selectedPolicyCNFT","length","target","value","sortPolicy","console","log","config","headers","Accept","params","policy","axios","get","then","res","volumeStr","data","total_volume","Math","pow","toLocaleString","floorNum","floor_price","floorStr","assets","asset_minted","cap","editImg","thumbnail","slice","holders","asset_holders","nftsPerWallet","toFixed","pic","setImgCNFT","setFloor","setVolCNFT","setMktCapCNFT","setAssetsMinted","setAssetHolders","setAssetsWallet","catch","err"],"sources":["/Users/kingedward43/Documents/CNiphtyProphetCode/cniphtyprophetreact/cniphtyprophet/src/components/ChangeProjectFunc.js"],"sourcesContent":["import React from \"react\";\n\nconst ChangeProject = (e) => {\n    let policyManual;\n    let selectedPolicyCNFT;\n    if (e.length > 1) {\n      policyManual = e;\n      selectedPolicyCNFT = null;\n    } else {\n      selectedPolicyCNFT = e.target.value;\n      policyManual = null;\n    }\n\n    function sortPolicy() {\n      if (policyManual !== null) {\n        return policyManual;\n      } else {\n        return selectedPolicyCNFT;\n      }\n    }\n    console.log(selectedPolicyCNFT);\n    console.log(e);\n    const config = { headers: { Accept: \"application/json\" } };\n\n    const params = {\n      policy: sortPolicy(),\n    };\n    axios\n      .get(`https://api.opencnft.io/1/policy/${params.policy}`, config)\n      .then((res) => {\n        const volumeStr = `${(res.data.total_volume /= Math.pow(\n          10,\n          6\n        )).toLocaleString()} ADA`;\n        const floorNum = (res.data.floor_price /= Math.pow(10, 6));\n        const floorStr = `${floorNum} ADA`;\n        const assets = res.data.asset_minted;\n        const cap = `${(assets * floorNum).toLocaleString()} ADA`;\n        const editImg = res.data.thumbnail.slice(-46);\n        const holders = res.data.asset_holders;\n        console.log(editImg);\n        const nftsPerWallet = (res.data.asset_minted /=\n          res.data.asset_holders).toFixed(2);\n        const pic = `https://ipfs.io/ipfs/${editImg}`;\n        setImgCNFT(pic);\n        setFloor(floorStr);\n        setVolCNFT(volumeStr);\n        setMktCapCNFT(cap);\n        setAssetsMinted(assets);\n        setAssetHolders(holders);\n        setAssetsWallet(nftsPerWallet);\n        console.log(res.data.thumbnail);\n        console.log(cap);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  export default ChangeProject;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;EACzB,IAAIC,YAAJ;EACA,IAAIC,kBAAJ;;EACA,IAAIF,CAAC,CAACG,MAAF,GAAW,CAAf,EAAkB;IAChBF,YAAY,GAAGD,CAAf;IACAE,kBAAkB,GAAG,IAArB;EACD,CAHD,MAGO;IACLA,kBAAkB,GAAGF,CAAC,CAACI,MAAF,CAASC,KAA9B;IACAJ,YAAY,GAAG,IAAf;EACD;;EAED,SAASK,UAAT,GAAsB;IACpB,IAAIL,YAAY,KAAK,IAArB,EAA2B;MACzB,OAAOA,YAAP;IACD,CAFD,MAEO;MACL,OAAOC,kBAAP;IACD;EACF;;EACDK,OAAO,CAACC,GAAR,CAAYN,kBAAZ;EACAK,OAAO,CAACC,GAAR,CAAYR,CAAZ;EACA,IAAMS,MAAM,GAAG;IAAEC,OAAO,EAAE;MAAEC,MAAM,EAAE;IAAV;EAAX,CAAf;EAEA,IAAMC,MAAM,GAAG;IACbC,MAAM,EAAEP,UAAU;EADL,CAAf;EAGAQ,KAAK,CACFC,GADH,4CAC2CH,MAAM,CAACC,MADlD,GAC4DJ,MAD5D,EAEGO,IAFH,CAEQ,UAACC,GAAD,EAAS;IACb,IAAMC,SAAS,aAAM,CAACD,GAAG,CAACE,IAAJ,CAASC,YAAT,IAAyBC,IAAI,CAACC,GAAL,CAC7C,EAD6C,EAE7C,CAF6C,CAA1B,EAGlBC,cAHkB,EAAN,SAAf;IAIA,IAAMC,QAAQ,GAAIP,GAAG,CAACE,IAAJ,CAASM,WAAT,IAAwBJ,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAAb,CAA1C;IACA,IAAMI,QAAQ,aAAMF,QAAN,SAAd;IACA,IAAMG,MAAM,GAAGV,GAAG,CAACE,IAAJ,CAASS,YAAxB;IACA,IAAMC,GAAG,aAAM,CAACF,MAAM,GAAGH,QAAV,EAAoBD,cAApB,EAAN,SAAT;IACA,IAAMO,OAAO,GAAGb,GAAG,CAACE,IAAJ,CAASY,SAAT,CAAmBC,KAAnB,CAAyB,CAAC,EAA1B,CAAhB;IACA,IAAMC,OAAO,GAAGhB,GAAG,CAACE,IAAJ,CAASe,aAAzB;IACA3B,OAAO,CAACC,GAAR,CAAYsB,OAAZ;IACA,IAAMK,aAAa,GAAG,CAAClB,GAAG,CAACE,IAAJ,CAASS,YAAT,IACrBX,GAAG,CAACE,IAAJ,CAASe,aADW,EACIE,OADJ,CACY,CADZ,CAAtB;IAEA,IAAMC,GAAG,kCAA2BP,OAA3B,CAAT;IACAQ,UAAU,CAACD,GAAD,CAAV;IACAE,QAAQ,CAACb,QAAD,CAAR;IACAc,UAAU,CAACtB,SAAD,CAAV;IACAuB,aAAa,CAACZ,GAAD,CAAb;IACAa,eAAe,CAACf,MAAD,CAAf;IACAgB,eAAe,CAACV,OAAD,CAAf;IACAW,eAAe,CAACT,aAAD,CAAf;IACA5B,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACE,IAAJ,CAASY,SAArB;IACAxB,OAAO,CAACC,GAAR,CAAYqB,GAAZ;EACD,CA1BH,EA2BGgB,KA3BH,CA2BS,UAACC,GAAD,EAAS;IACdvC,OAAO,CAACC,GAAR,CAAYsC,GAAZ;EACD,CA7BH;AA8BD,CAvDH;;AAyDE,eAAe/C,aAAf"},"metadata":{},"sourceType":"module"}