{"ast":null,"code":"import _classCallCheck from \"/Users/kingedward43/Documents/CNiphtyProphetCode/cniphtyprophetreact/cniphtyprophet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar Ecosystem = function Ecosystem(id, name, coinId) {\n  _classCallCheck(this, Ecosystem);\n\n  this.name = name;\n  this.coinId = coinId;\n};\n\nvar ada = new Ecosystem('Cardano', 'cardano');\nvar ardana = new Ecosystem('Ardana', 'ardana');\nvar meld = new Ecosystem('Meld', 'meld');\nvar wmt = new Ecosystem('World Mobile', 'world-mobile-token');\nvar wrt = new Ecosystem('Wing Riders', 'wingriders');\nvar liqwid = new Ecosystem('Liqwid', 'liqwid-finance');\nvar pavia = new Ecosystem('Pavia', 'pavia');\nvar copi = new Ecosystem('Cornucopias', 'cornucopias');\nvar vyfi = new Ecosystem('VYFinance', 'vyfinance');\nvar sundae = new Ecosystem('SundaeSwap', 'sundaeswap');\nvar solana = new Ecosystem('Solana', 'solana');\nvar ethereum = new Ecosystem('Ethereum', 'ethereum');\nvar bitcoin = new Ecosystem('Bitcoin', 'bitcoin');\nvar algorand = new Ecosystem('Algorand', 'algorand');\nvar ripple = new Ecosystem('XRP', 'ripple');\nvar binance = new Ecosystem('BNB', 'binancecoin');\nvar avalanche = new Ecosystem('Avalanche', 'avalanche-2');\nvar chainlink = new Ecosystem('Chainlink', 'chainlink');\nvar ape = new Ecosystem('ApeCoin', 'apecoin');\nvar sandbox = new Ecosystem('Sandbox', 'the-sandbox');\nvar aave = new Ecosystem('AAVE', 'aave');\nvar decentraland = new Ecosystem('Decentraland', 'decentraland');\nvar polygon = new Ecosystem('Polygon', 'matic-network');\nvar polkadot = new Ecosystem('Polkadot', 'polkadot');\nvar cosmos = new Ecosystem('Cosmos', 'cosmos');\nvar minswap = new Ecosystem('Minswap', 'minswap');\nvar clay = new Ecosystem('Clay', 'clay-nation');\nvar apeSociety = new Ecosystem('Society', 'the-ape-society');\nvar tokenArray = [apeSociety, clay, minswap, polygon, polkadot, cosmos, ripple, binance, avalanche, chainlink, ape, sandbox, aave, decentraland, ada, ardana, meld, wmt, wrt, liqwid, pavia, copi, vyfi, sundae, solana, bitcoin, ethereum, algorand];\nvar tokenSortList = tokenArray.sort(function (a, b) {\n  return a.name < b.name ? -1 : 1;\n});\nexport default tokenSortList;","map":{"version":3,"names":["Ecosystem","id","name","coinId","ada","ardana","meld","wmt","wrt","liqwid","pavia","copi","vyfi","sundae","solana","ethereum","bitcoin","algorand","ripple","binance","avalanche","chainlink","ape","sandbox","aave","decentraland","polygon","polkadot","cosmos","minswap","clay","apeSociety","tokenArray","tokenSortList","sort","a","b"],"sources":["/Users/kingedward43/Documents/CNiphtyProphetCode/cniphtyprophetreact/cniphtyprophet/src/components/CryptoProjectData.js"],"sourcesContent":["\n\nclass Ecosystem {\n    constructor(id, name, coinId) {\n        this.name = name;\n        this.coinId = coinId;\n    }\n}\n\nconst ada = new Ecosystem('Cardano', 'cardano');\nconst ardana = new Ecosystem('Ardana', 'ardana');\nconst meld = new Ecosystem('Meld', 'meld');\nconst wmt = new Ecosystem('World Mobile', 'world-mobile-token');\nconst wrt = new Ecosystem('Wing Riders', 'wingriders');\nconst liqwid = new Ecosystem('Liqwid', 'liqwid-finance');\nconst pavia = new Ecosystem('Pavia', 'pavia');\nconst copi = new Ecosystem('Cornucopias', 'cornucopias');\nconst vyfi = new Ecosystem('VYFinance', 'vyfinance');\nconst sundae = new Ecosystem('SundaeSwap', 'sundaeswap');\nconst solana = new Ecosystem('Solana', 'solana');\nconst ethereum = new Ecosystem('Ethereum', 'ethereum');\nconst bitcoin = new Ecosystem('Bitcoin', 'bitcoin');\nconst algorand = new Ecosystem('Algorand', 'algorand');\nconst ripple = new Ecosystem('XRP', 'ripple');\nconst binance = new Ecosystem('BNB', 'binancecoin');\nconst avalanche = new Ecosystem('Avalanche', 'avalanche-2');\nconst chainlink = new Ecosystem('Chainlink', 'chainlink');\nconst ape = new Ecosystem('ApeCoin', 'apecoin');\nconst sandbox = new Ecosystem('Sandbox', 'the-sandbox');\nconst aave = new Ecosystem('AAVE', 'aave');\nconst decentraland = new Ecosystem('Decentraland', 'decentraland');\nconst polygon = new Ecosystem('Polygon', 'matic-network');\nconst polkadot = new Ecosystem('Polkadot', 'polkadot');\nconst cosmos = new Ecosystem('Cosmos', 'cosmos');\nconst minswap = new Ecosystem('Minswap', 'minswap');\nconst clay = new Ecosystem('Clay', 'clay-nation');\nconst apeSociety = new Ecosystem('Society', 'the-ape-society');\n\n\nconst tokenArray = [\n    apeSociety,\n    clay,\n    minswap,\n    polygon,\n    polkadot,\n    cosmos,\n    ripple,\n    binance,\n    avalanche,\n    chainlink,\n    ape,\n    sandbox,\n    aave,\n    decentraland,\n    ada,\n    ardana,\n    meld,\n    wmt,\n    wrt,\n    liqwid,\n    pavia,\n    copi,\n    vyfi,\n    sundae,\n    solana,\n    bitcoin,\n    ethereum,\n    algorand\n  ];\n  const tokenSortList = tokenArray.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n\nexport default tokenSortList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}